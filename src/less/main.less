/**
 * This is the main application stylesheet. It should include or import all
 * stylesheets used throughout the application as this is the only stylesheet in
 * the Grunt configuration that is automatically processed.
 */


/**
 * First, we include the Twitter Bootstrap LESS files. Only the ones used in the
 * project should be imported as the rest are just wasting space.
 */

@import '../../vendor/bootstrap/less/mixins.less';
@import '../../vendor/bootstrap/less/reset.less';
@import '../../vendor/bootstrap/less/scaffolding.less';
@import '../../vendor/bootstrap/less/type.less';
@import '../../vendor/bootstrap/less/grid.less';
@import '../../vendor/bootstrap/less/layouts.less';
@import '../../vendor/bootstrap/less/navs.less';
@import '../../vendor/bootstrap/less/navbar.less';
@import '../../vendor/bootstrap/less/responsive.less';
@import '../../vendor/bootstrap/less/responsive-navbar.less';
@import '../../vendor/bootstrap/less/responsive-utilities.less';

/**
 * This is our main variables file. It in turn imports the `variables` file from
 * Twitter Bootstrap. We must include it last so we can overwrite any variable
 * definitions in our imported stylesheets.
 */

@import 'variables.less';

/**
 * Typography
 */
 @font-face {
    font-family: 'robotolight';
    src: url('fonts/Roboto-Light-webfont.eot');
    src: url('fonts/Roboto-Light-webfont.eot?#iefix') format('embedded-opentype'),
         url('fonts/Roboto-Light-webfont.woff') format('woff'),
         url('fonts/Roboto-Light-webfont.ttf') format('truetype'),
         url('fonts/Roboto-Light-webfont.svg#robotolight') format('svg');
    font-weight: normal;
    font-style: normal;

}
@font-face {
    font-family: 'robotoregular';
    src: url('fonts/Roboto-Regular-webfont.eot');
    src: url('fonts/Roboto-Regular-webfont.eot?#iefix') format('embedded-opentype'),
         url('fonts/Roboto-Regular-webfont.woff') format('woff'),
         url('fonts/Roboto-Regular-webfont.ttf') format('truetype'),
         url('fonts/Roboto-Regular-webfont.svg#robotoregular') format('svg');
    font-weight: normal;
    font-style: normal;

}
@font-face {
    font-family: 'robotomedium';
    src: url('fonts/Roboto-Medium-webfont.eot');
    src: url('fonts/Roboto-Medium-webfont.eot?#iefix') format('embedded-opentype'),
         url('fonts/Roboto-Medium-webfont.woff') format('woff'),
         url('fonts/Roboto-Medium-webfont.ttf') format('truetype'),
         url('fonts/Roboto-Medium-webfont.svg#robotomedium') format('svg');
    font-weight: normal;
    font-style: normal;

}

/**
 * Navigation
 */
.navbar-inverse .navbar-inner {
border-color: #ddd;
}
@media (max-width: 979px) {

.navbar .header {
  height: 50px;
  background-color: #1b1b1b;
  position: relative; 
  z-index: 10;
}
.navbar-fixed-top .navbar-inner, .navbar-fixed-bottom .navbar-inner {
padding: 0;
}
.navbar .container {
padding: 0;
height: 50px;
}
.navbar-inverse .navbar-inner {
background-color: #1b1b1b;
background-image: none;
background-repeat: none;
border-color: #ddd;
webkit-box-shadow: none;
-moz-box-shadow: none;
box-shadow: none;
}
.navbar .btn-navbar {
margin:8px 15px 8px 0;
background-color: transparent;
border-color: transparent;
background-image: none;
webkit-box-shadow: none;
-moz-box-shadow: none;
box-shadow: none;
border: 1px solid transparent;
border-radius: 4px;
}
.navbar-inverse .btn-navbar {
background-color: transparent;
border-color: transparent;
background-image: none;
webkit-box-shadow: none;
-moz-box-shadow: none;
box-shadow: none;
border: 1px solid transparent;
border-radius: 4px;
}
.navbar .brand {
font-family: 'robotolight', sans-serif;
letter-spacing: 1px;
margin: 0;
padding: 15px;
text-shadow:none;
color: #fff;
}
.navbar .brand span {

}
.nav-collapse, .nav-collapse.collapse {
height: auto;
background-color: #1b1b1b;
position: relative;
z-index: 0;
border-top: 1px solid transparent;
border-bottom: 1px solid #ddd;
box-shadow: inset 0 1px 0 rgba(0, 0, 0, 0.2);

-webkit-transition: -webkit-transform 300ms cubic-bezier(0.190, 1.000, 0.220, 1.000); /* easeOutExpo */;
-moz-transition: -moz-transform 300ms cubic-bezier(0.190, 1.000, 0.220, 1.000); /* easeOutExpo */;
-o-transition: -o-transform 300ms cubic-bezier(0.190, 1.000, 0.220, 1.000); /* easeOutExpo */;
transition: transform 300ms cubic-bezier(0.190, 1.000, 0.220, 1.000); /* easeOutExpo */;
-webkit-backface-visibility: hidden;
-moz-backface-visibility: hidden;
-ms-backface-visibility: hidden;
-o-backface-visibility: hidden;
backface-visibility: hidden;
}
.nav-collapse .nav > li > a {
font-family: 'robotolight', sans-serif;
text-shadow:none;
font-weight: normal;
}
.expanded-disabled .nav-collapse {
top:-100%;
}
.expanded .nav-collapse {
top:0%;
}
.csstransforms3d.csstransitions.expanded-disabled .nav-collapse {
    top: -100% !important;
    -webkit-transform: translate3d(0, -100%, 0);
    -moz-transform: translate3d(0, -100%, 0);
    -ms-transform: translate3d(0, -100%, 0);
    -o-transform: translate3d(0, -100%, 0);
    transform: translate3d(0, -100%, 0);
}
.csstransforms3d.csstransitions.expanded .nav-collapse {
    -webkit-transform: translate3d(0, 0%, 0);
    -moz-transform: translate3d(0, 0%, 0);
    -ms-transform: translate3d(0, 0%, 0);
    -o-transform: translate3d(0, 0%, 0);
    transform: translate3d(0, 0%, 0);
  }

}

/**
 * Footer
 */



/**
 * Now that all app-wide styles have been applied, we can load the styles for
 * all the submodules and components we are using. 
 *
 * TODO: In a later version of this boilerplate, I'd like to automate this.
 */

@import '../app/home/home.less';